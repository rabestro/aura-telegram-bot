# ==============================================================================
# 1. Project Metadata
#    Core information about the project, used for packaging and publishing.
# ==============================================================================
[project]
name = "aura-telegram-bot"
dynamic = ["version"]  # Version is managed automatically via git tags by setuptools-scm
description = "An intelligent Telegram bot for the Aura smart home, providing assistance and information about home devices."
authors = [
  { name = "Jegors ÄŒemisovs", email = "jegors.cemisovs@gmail.com" },
]
license = "MIT"
license-files = ["LICENSE"]
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Topic :: Home Automation",
]

# --- Project Dependencies ---
dependencies = [
  "python-telegram-bot", # Core library for the Telegram Bot API
  "google-generativeai", # For integration with the Gemini AI API
  "python-dotenv", # For loading secrets (tokens) from a .env file
]

[project.urls]
Homepage = "https://github.com/rabestro/aura-telegram-bot"
Repository = "https://github.com/rabestro/aura-telegram-bot.git"

# ==============================================================================
# 2. Development Dependencies
#    Libraries needed only for development (testing, linting, etc.).
# ==============================================================================
[project.optional-dependencies]
dev = [
  "ruff", # Code linter and formatter
  "mypy", # Static type checker
  "pytest", # Testing framework
  "pytest-asyncio", # For testing asynchronous code
  "poethepoet", # Task runner
]

# ==============================================================================
# 3. Entry Points
#    Defines how to run the application after installation.
# ==============================================================================
[project.scripts]
aura-bot = "aura_telegram_bot.main:main"

# ==============================================================================
# 4. Build System Configuration
#    Settings for building the package. Uses setuptools with scm for versioning.
# ==============================================================================
[build-system]
requires = ["setuptools>=80.0", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]  # Look for packages in the 'src' directory

[tool.setuptools_scm]
write_to = "src/aura_telegram_bot/_version.py"

# ==============================================================================
# 5. Tooling Configuration
#    Settings for all development tools.
# ==============================================================================

# --- UV (Package Manager) ---
[tool.uv]
# UV-specific settings can be added here if needed.

# --- Ruff (Linter and Formatter) ---
[tool.ruff]
target-version = "py312"
line-length = 99
exclude = ["src/aura_telegram_bot/_version.py"]

[tool.ruff.lint]
select = [
  "E", # pycodestyle (errors)
  "W", # pycodestyle (warnings)
  "F", # Pyflakes
  "I", # isort (import sorting)
  "UP", # pyupgrade (modernize syntax)
  "B", # flake8-bugbear (bug detection)
  "S", # flake8-bandit (security checks)
  "C4", # flake8-comprehensions (idiomatic comprehensions)
  "D", # pydocstyle (docstring style)
  "RUF", # Ruff-specific rules
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
known-first-party = ["aura_telegram_bot", "tests"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101"] # Allow 'assert' in tests

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

# --- MyPy (Type Checker) ---
[tool.mypy]
mypy_path = "src"
strict = true

# Ignore missing type stubs for the google-generativeai library
[[tool.mypy.overrides]]
module = "google.generativeai.*"
ignore_missing_imports = true
